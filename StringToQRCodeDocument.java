// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.


import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Date;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;

/**
 * Generates a PNG document with the input's text value as a QR code.
 */
public class StringToQRCodeDocument extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String Text;
	private IMendixObject __Document;
	private system.proxies.FileDocument Document;
	private java.lang.Long Height;
	private java.lang.Long Width;

	public StringToQRCodeDocument(IContext context, java.lang.String Text, IMendixObject Document, java.lang.Long Height, java.lang.Long Width)
	{
		super(context);
		this.Text = Text;
		this.__Document = Document;
		this.Height = Height;
		this.Width = Width;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.Document = __Document == null ? null : system.proxies.FileDocument.initialize(getContext(), __Document);

		// BEGIN USER CODE
		ILogNode logger = Core.getLogger("StringToQRCode");
		if (this.Height == null || this.Width == null) {
			logger.error("Please specify a height and width");
			return false;
		}
		IMendixObject fileDocument = this.Document.getMendixObject();
		File f = getFileFromFileDocument(fileDocument);
		QRCodeWriter qrcw = new QRCodeWriter();
		BitMatrix bm = qrcw.encode(this.Text, BarcodeFormat.QR_CODE, this.Width.intValue(), this.Height.intValue()); 
		FileOutputStream os = new FileOutputStream(f);
		MatrixToImageWriter.writeToStream(bm, "PNG", os);
		os.close();
		FileInputStream is = new FileInputStream(f);
		Core.storeFileDocumentContent(getContext(), fileDocument, is);
		is.close();
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "StringToQRCodeDocument";
	}

	// BEGIN EXTRA CODE
	private File getFileFromFileDocument(IMendixObject fileDocument) 
	{
		File fileToPull = new File( Core.getConfiguration().getTempPath().getAbsolutePath()+"/RandomFileName" + (new Date()).getTime()+ ".png" );
		try {
			InputStream stream = Core.getFileDocumentContent(getContext(), fileDocument);
			FileOutputStream outputStream = new FileOutputStream( fileToPull );
 
			int read = 0;
			byte[] bytes = new byte[1024];
	 
			while ((read = stream.read(bytes)) != -1) {
				outputStream.write(bytes, 0, read);
			}
			outputStream.flush();
			outputStream.close();
		} catch (Exception e) {}	
		
		return fileToPull;
		
	}
	// END EXTRA CODE
}
